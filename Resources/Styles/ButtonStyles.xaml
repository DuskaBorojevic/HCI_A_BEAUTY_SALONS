<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--Base Button Style with Hover and Press Effects-->
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="6"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.9"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.02" ScaleY="1.02"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.8"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryLightBrush}"/>-->
    <Style x:Key="MenuButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextOnPrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10,8"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryLightBrush}"/>
                            <Setter TargetName="border" Property="Opacity" Value="0.3"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryLightBrush}"/>
                            <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Icon Button Base-->
    <Style x:Key="IconButtonBase" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Width" Value="36"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Margin" Value="2"/>
    </Style>

    <!--Text Button Base-->
    <Style x:Key="TextButtonBase" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Margin" Value="4,2"/>
    </Style>

    <!--Large Button Base-->
    <Style x:Key="LargeButtonBase" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Padding" Value="20,12"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="4,2"/>
    </Style>

    <!--Primary Buttons-->
    <Style x:Key="PrimaryIconButton" TargetType="Button" BasedOn="{StaticResource IconButtonBase}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="PrimaryTextButton" TargetType="Button" BasedOn="{StaticResource TextButtonBase}">
        <Setter Property="FontFamily" Value="{DynamicResource ButtonFont}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="{DynamicResource ButtonFont}"/>
    </Style>

    <Style x:Key="PrimaryLargeButton" TargetType="Button" BasedOn="{StaticResource LargeButtonBase}">
        <Setter Property="FontFamily" Value="{DynamicResource ButtonFont}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!--Success Buttons-->
    <Style x:Key="SuccessIconButton" TargetType="Button" BasedOn="{StaticResource IconButtonBase}">
        <Setter Property="Background" Value="{DynamicResource SuccessBrush}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="SuccessTextButton" TargetType="Button" BasedOn="{StaticResource TextButtonBase}">
        <Setter Property="FontFamily" Value="{DynamicResource ButtonFont}"/>
        <Setter Property="Background" Value="{DynamicResource SuccessBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource ButtonFont}"/>
    </Style>

    <Style x:Key="SuccessLargeButton" TargetType="Button" BasedOn="{StaticResource LargeButtonBase}">
        <Setter Property="Background" Value="{DynamicResource SuccessBrush}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!--Error/Danger Buttons-->
    <Style x:Key="ErrorIconButton" TargetType="Button" BasedOn="{StaticResource IconButtonBase}">
        <Setter Property="Background" Value="{DynamicResource ErrorBrush}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="ErrorTextButton" TargetType="Button" BasedOn="{StaticResource TextButtonBase}">
        <Setter Property="FontFamily" Value="{DynamicResource ButtonFont}"/>
        <Setter Property="Background" Value="{DynamicResource ErrorBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource ButtonFont}"/>
    </Style>

    <Style x:Key="ErrorLargeButton" TargetType="Button" BasedOn="{StaticResource LargeButtonBase}">
        <Setter Property="Background" Value="{DynamicResource ErrorBrush}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!--Secondary/Neutral Buttons-->
    <Style x:Key="SecondaryIconButton" TargetType="Button" BasedOn="{StaticResource IconButtonBase}">
        <Setter Property="Background" Value="{DynamicResource ElevatedSurfaceBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="SecondaryTextButton" TargetType="Button" BasedOn="{StaticResource TextButtonBase}">
        <Setter Property="FontFamily" Value="{DynamicResource ButtonFont}"/>
        <Setter Property="Background" Value="{DynamicResource ElevatedSurfaceBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="{DynamicResource ButtonFont}"/>
    </Style>

    <Style x:Key="SecondaryLargeButton" TargetType="Button" BasedOn="{StaticResource LargeButtonBase}">
        <Setter Property="Background" Value="{DynamicResource ElevatedSurfaceBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!--Specific Action Button Styles-->
    <Style x:Key="AddButton" TargetType="Button" BasedOn="{StaticResource PrimaryIconButton}">
        <Setter Property="ToolTip" Value="{DynamicResource AddNewTooltip}"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="+" FontSize="16" FontWeight="Bold"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EditButton" TargetType="Button" BasedOn="{StaticResource PrimaryIconButton}">
        <Setter Property="ToolTip" Value="{DynamicResource EditTooltip}"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="✎" FontSize="14" FontWeight="Bold"
                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeleteButton" TargetType="Button" BasedOn="{StaticResource ErrorIconButton}">
        <Setter Property="ToolTip" Value="{DynamicResource DeleteTooltip}"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="🗑" FontSize="14" FontWeight="Bold" 
                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SaveButton" TargetType="Button" BasedOn="{StaticResource SuccessIconButton}">
        <Setter Property="ToolTip" Value="{DynamicResource SaveTooltip}"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="✓" FontSize="16" FontWeight="Bold" 
                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButton" TargetType="Button" BasedOn="{StaticResource SecondaryIconButton}">
        <Setter Property="ToolTip" Value="{DynamicResource CloseTooltip}"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="✕" FontSize="14" FontWeight="Bold" 
                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IncreaseButton" TargetType="Button" BasedOn="{StaticResource PrimaryIconButton}">
        <Setter Property="ToolTip" Value="{DynamicResource IncreaseTooltip}"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Foreground" Value="{DynamicResource TextOnPrimaryBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryLightBrush}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="+" 
                           HorizontalAlignment="Center" 
                           VerticalAlignment="Center"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DecreaseButton" TargetType="Button" BasedOn="{StaticResource PrimaryIconButton}">
        <Setter Property="ToolTip" Value="{DynamicResource DecreaseTooltip}"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Foreground" Value="{DynamicResource TextOnPrimaryBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryLightBrush}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="–" 
                           HorizontalAlignment="Center" 
                           VerticalAlignment="Center"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Link Button Style-->
    <Style x:Key="LinkButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PressedBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                                CornerRadius="0">
                        <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryLightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
